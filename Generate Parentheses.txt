public class Solution {
    
    
    public ArrayList<String> generateParenthesis(int n) {
        ArrayList<String> as = new ArrayList<String>();
        StringBuilder strb = new StringBuilder("");
        genP(strb, n, 0, as);
        return as;
    }
    
    private void genP(StringBuilder str, int numOfLeft, int availRight, ArrayList<String> as){
        if (numOfLeft == 0){
            StringBuilder sb = new StringBuilder("");
            while(availRight > 0){
                sb.append(")");
                availRight--;
            }
            as.add(str.toString() + sb.toString());
            return;
        }
        if(availRight > 0){
            str.append(")");
            genP(str, numOfLeft, availRight-1, as);
            str.setLength(str.length()-1);
        }
        str.append("(");
        genP(str, numOfLeft-1, availRight+1, as);
        str.setLength(str.length()-1);
    }
}
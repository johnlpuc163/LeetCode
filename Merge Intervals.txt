/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public ArrayList<Interval> merge(ArrayList<Interval> intervals) {
        if(intervals.size() == 0)
            return intervals;
        Collections.sort(intervals, new NewComparator());
        for(int i = 0; i < intervals.size()-1; i++){
            Interval a1 = intervals.get(i);
            int j = i + 1;
            while(j < intervals.size()){
                Interval a2 = intervals.get(j);
                if(a2.start <= a1.end ){
                    if (a2.end > a1.end)
                        a1.end = a2.end;
                    intervals.remove(j);
                }
                else
                    break;
            }
        }
        return intervals;
    }
}

class NewComparator implements Comparator<Interval> {
	public int compare(Interval i1, Interval i2) {
		return i1.start - i2.start;
	}
}
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        int flag = 0;
        int temp = 0;
        ListNode l3 = l1, tail = l1;
        if (l1 == null){
            return l2;
        }
        else if (l2 == null){
            return l1;
        }
        while(l1 != null && l2 != null){
            temp = l1.val + l2.val + flag;
            flag = 0;
            if(temp > 9){
                flag = 1;
            }
            l1.val = temp % 10;
            tail = l1;
            l1 = l1.next;
            l2 = l2.next;
        }
        if(l1 == null & l2 == null & flag == 1){
            tail.next = new ListNode(1);
        }
        else if(l1 == null){
            tail.next = l2;
            while(flag == 1 && l2 != null){
                temp = flag + l2.val;
                flag = 0;
                if(temp > 9){
                    flag = 1;
                }
                l2.val = temp % 10;
                tail = l2;
                l2 = l2.next;
            }
            if(l2 == null && flag == 1){
                tail.next = new ListNode(1);
            }
        }
        else{
            while(flag == 1 && l1 != null){
                temp = flag + l1.val;
                flag = 0;
                if(temp > 9){
                    flag = 1;
                }
                l1.val = temp % 10;
                tail = l1;
                l1 = l1.next;
            }
            if(l1 == null && flag == 1){
                tail.next = new ListNode(1);
            }
        }
        return l3;
    }
}